<?php

/*
Plugin Name: RedApple Theme Customizer - Melissa's Version
Description: Methods that add custom settings and controls under new "theme settings" section
Author: Joe Pena & Melissa Cabral
Version: 0.1
Requires at least: 3.4

awesome tutorial here:  http://themefoundation.com/wordpress-theme-customizer/

@TODO: figure out why the data refreshes too late. 
*/

/**
 * Front end display. set up color scheme hex codes here
 */
function display_css(){
	$custom_options = get_theme_mods();
	$color_scheme = $custom_options['ra_color_scheme'];

    /* 
    =================== KEY ===================

        SCHEMES

        'scheme1' => 'Turquoise (Default)',
        'scheme2' => 'Monochrome Gray',
        'scheme3' => 'Autumn Leaves',
        'scheme4' => 'Steel Blue',
        'scheme5' => 'Dark Turquoise',
        'scheme6' => 'Bold Red',
        'scheme7' => 'Spring Green' 

        COLORS

        color[0] = Nav bar, Links
        color[1] = Accent Elements
        color[2] = Body Background
        color[3] = Category Links
        color[4] = HTML Background
        color[5] = Body Text
        color[6] = Bars
        color[7] = Bar Text
   */

	switch($color_scheme){
		case 'scheme2':
            //monochrome gray
			$color = array('727b7b','879191','f5fafa','389494','727b7b','212121','4b5555','ffffff');
		break;
		case 'scheme3':
            //Autumn Leaves
			$color = array('452b1b','e38600','e7f0e7','269149','452b1b','26170e','c54e07','ffffff');
		break;
		case 'scheme4':
            //Steel Blue
			$color = array('8998af','3c4450','19202b','ef8803','222b39','ffffff','222b39','ffffff'); 
		break;
        //TODO... add the other schemes
		default: 
            //Turquoise
			$color = array('5daa92','46816f','ffffff','f27e59','eae7db','363636','000000','ffffff');
     		     				
		
	}

    //calculate rgb values from the body text color for the widget BGs
    $rgb_bodytext = hex2RGB($color[5]);
    $faded_bodytext = 'rgba('.$rgb_bodytext['red'].','.$rgb_bodytext['blue'].','.$rgb_bodytext['green'].', .05)';
    //calc the rgb from the body BG for the category BGs
    $rgb_bodybg = hex2RGB($color[2]);
    $faded_bodybg = 'rgba('.$rgb_bodybg['red'].','.$rgb_bodybg['blue'].','.$rgb_bodybg['green'].', .1)';


	return     'html { background-color: #'.$color[4].' ; color: #'.$color[5].'; }
                body{background-color:  #'.$color[2].'}
     			header a { color: #'.$color[7].'; }
     			header .main-nav, input[type=submit], input[type=button], button, .primary-action { background-color: #'.$color[0].' ; color: #'.$color[7].';}
               
                .current_page_item a, .current_page_ancestor a, .current_page_parent a{ border-bottom:solid .375em #'.$color[1].'; }
				header ul a:hover { background-color: #'.$color[1].';border-bottom:solid .375em #'.$color[1].';  }
				aside .widget-title, .ra-days-bar, .utilities { background-color: #'.$color[6].'; color:#'.$color[7].'; }
				a { color:  #'.$color[0].'; }
                .widget-title:after{ background-color:#'.$color[1].'; color:#'.$color[1].'; }
                .post-meta, aside .widget{background-color:'.$faded_bodytext.';}
                .entry-date .month{ background-color: #'.$color[3].';color:#'.$color[2].'}
                .entry-categories a{color:#'.$color[3].'; background-color:'.$faded_bodybg.';}';    

}
function redapple_customize_css() {
    ?>
         <!-- generated by theme-customizer.php-->
         <style type="text/css"> 
            <?php echo display_css(); ?> 
          </style>
    <?php
}
add_action( 'wp_head', 'redapple_customize_css');


/**
 * Putting Theme Customizer on the Appearance Menu Rather than Hidden
 * @since ver. 0.1
 * @TODO:  remove this for 3.6?
 */

add_action ('admin_menu', 'themedemo_admin');
function themedemo_admin() {
    // add the Customize link to the admin menu
    add_theme_page( 'Customize', 'Customize', 'edit_theme_options', 'customize.php' );
}

/**
 * Define the settings and controls
 * @since ver. 0.1
 */
add_action( 'customize_register', 'redapple_customize' );
function redapple_customize ( $wp_customize ) {

	//create a section on the customize screen
	$wp_customize->add_section( 'color_scheme_section' , array(
    'title'      => 'Color Scheme',
    'priority'   => 10,
    'description'=> 'Define Colors for your Theme Here'
	) );

	//Add settings to this section 
	//TODO: sanitize this!
	$wp_customize->add_setting( 'ra_color_scheme' , array(
    	'default'     => 'scheme1',
    	 'sanitize_callback' => 'redapple_option_sanitize',
    	 'transport' => 'refresh'
     ) );

	//Add Controls to each setting
	//Make Radio Buttons
	$wp_customize->add_control( 'ra_color_scheme', array(
	'label'      => 'Pick a color scheme',
	'section'    => 'color_scheme_section',
	'settings'   => 'ra_color_scheme',
	'type'       => 'radio',
    'choices'    => array(
        'scheme1' => 'Turquoise (Default)',
        'scheme2' => 'Monochrome Gray',
        'scheme3' => 'Autumn Leaves',
        'scheme4' => 'Steel Blue',
        'scheme5' => 'Dark Turquoise',
        'scheme6' => 'Bold Red',
        'scheme7' => 'Spring Green',
        ),
	) );
		//Define Styles for Radio Buttons
	

	//Lastly, Remove Default Colors Section
	//TODO: why isnt this working
	$wp_customize->remove_section( 'colors' );

}


/**
 * sanitizer for the color option
 */
function redapple_option_sanitize($input){
    $valid = array(
        'scheme1' => 'Turquoise (Default)',
        'scheme2' => 'Monochrome Gray',
        'scheme3' => 'Autumn Leaves',
        'scheme4' => 'Steel Blue',
        'scheme5' => 'Dark Turquoise',
        'scheme6' => 'Bold Red',
        'scheme7' => 'Spring Green',
        );
 
    if ( array_key_exists( $input, $valid ) ) {
        return $input;
    } else {
        return '';
    }

}
/**
 * Convert a hexa decimal color code to its RGB equivalent
 *
 * @param string $hexStr (hexadecimal color value)
 * @param boolean $returnAsString (if set true, returns the value separated by the separator character. Otherwise returns associative array)
 * @param string $seperator (to separate RGB values. Applicable only if second parameter is true.)
 * @return array or string (depending on second parameter. Returns False if invalid hex color value)
 */                                                                                                 
function hex2RGB($hexStr, $returnAsString = false, $seperator = ',') {
    $hexStr = preg_replace("/[^0-9A-Fa-f]/", '', $hexStr); // Gets a proper hex string
    $rgb_bodytextArray = array();
    if (strlen($hexStr) == 6) { //If a proper hex code, convert using bitwise operation. No overhead... faster
        $colorVal = hexdec($hexStr);
        $rgb_bodytextArray['red'] = 0xFF & ($colorVal >> 0x10);
        $rgb_bodytextArray['green'] = 0xFF & ($colorVal >> 0x8);
        $rgb_bodytextArray['blue'] = 0xFF & $colorVal;
    } elseif (strlen($hexStr) == 3) { //if shorthand notation, need some string manipulations
        $rgb_bodytextArray['red'] = hexdec(str_repeat(substr($hexStr, 0, 1), 2));
        $rgb_bodytextArray['green'] = hexdec(str_repeat(substr($hexStr, 1, 1), 2));
        $rgb_bodytextArray['blue'] = hexdec(str_repeat(substr($hexStr, 2, 1), 2));
    } else {
        return false; //Invalid hex color code
    }
    return $returnAsString ? implode($seperator, $rgb_bodytextArray) : $rgb_bodytextArray; // returns the rgb string or the associative array
}

//Do Not Close PHP